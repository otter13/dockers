# This docker file was referenced from the official docker image of cypress
# cypress/browsers:node16.5.0-chrome94-ff93
# The installation of Cypress and required libs are commented out due to vulnerability check
# The original image is set to run cypress while in our case we want to let it wait at shell
#
# To locally build this image with command with os arch type parameter if needed:  --platform=linux/arm64 
# otherwise docker will use the same type as the host. 
#   docker build .  -t <name>
#
FROM node:16.19.0-bullseye-slim

# Check OS
RUN cat /etc/os-release

# Update the dependencies to get the latest and greatest (and safest!) packages.
RUN apt update && apt upgrade -y \
     && apt-get install -y unzip zip jq less curl make p7zip-full perl build-essential


# Fix the http-cache-semantics CVE in nodejs by upgrading to 4.1.1
# https://nvd.nist.gov/vuln/detail/CVE-2022-25881
COPY http-cache-semantics/index.js /usr/local/lib/node_modules/npm/node_modules/http-cache-semantics/index.js
COPY http-cache-semantics/package.json /usr/local/lib/node_modules/npm/node_modules/http-cache-semantics/package.json

# Fix openssl CVE by upgrading to 3.0.8
# https://nvd.nist.gov/vuln/detail/CVE-2023-0286


RUN openssl version -a


#RUN mkdir /usr/local/openssl
COPY openssl/openssl-3.0.8.tar.gz /usr/src/openssl-3.0.8.tar.gz



#RUN ls -la /usr/local/openssl
# RUN chmod 755 /root
#RUN chmod -R 777 /usr/local/openssl

# Install/upgrade OpenSSL (Backup current openssl binary). Note: when running Debian docker on mac (m1 arm64), remove "ln -s libssl.so.3 libssl.so"

RUN cd /usr/src \
     && chmod +x openssl-3.0.8.tar.gz \
     && tar -zxf openssl-3.0.8.tar.gz \
     && cd openssl-3.0.8/ \
     && ./config \
     && make \
     && make test \
     && make install \
     && mv /usr/bin/openssl /root/ \
     && ln -s /usr/local/ssl/bin/openssl \
     && openssl version

RUN openssl version -a

# Install Cypress required libs
# RUN apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

# avoid too many progress messages
# https://github.com/cypress-io/cypress/issues/1243
ENV CI=1

# disable shared memory X11 affecting Cypress v4 and Chrome
# https://github.com/cypress-io/cypress-docker-images/issues/270
ENV QT_X11_NO_MITSHM=1
ENV _X11_NO_MITSHM=1
ENV _MITSHM=0

# should be root user
RUN echo "whoami: $(whoami)"
RUN npm config -g set user $(whoami)

# command "id" should print:
# uid=0(root) gid=0(root) groups=0(root)
# which means the current user is root
RUN id

# point Cypress at the /root/cache no matter what user account is used
# see https://on.cypress.io/caching
#TODO ENV CYPRESS_CACHE_FOLDER=/root/.cache/Cypress
#TODO RUN npm install -g "cypress@9.4.1"
#TODO RUN cypress verify


# Cypress cache and installed version
# should be in the root user's home folder
#TODO RUN cypress cache path
#TODO RUN cypress cache list
#TODO RUN cypress info
#TODO RUN cypress version

# give every user read access to the "/root" folder where the binary is cached
# we really only need to worry about the top folder, fortunately
RUN ls -la /root
# RUN chmod 755 /root
RUN chmod -R 777 /root

#TODO RUN apt-get install -y p7zip-full
#TODO RUN echo "Manually install cypress 9.4.1"
#TODO RUN mkdir -p /root/.cache/Cypress-arm
#TODO RUN mkdir -p /root/.cache/Cypress-arm/9.4.1
#TODO COPY cypress-9.4.1-m1-arm64.7z ./
#TODO RUN 7z x ./cypress-9.4.1-m1-arm64.7z -y -o/root/.cache/Cypress-arm/9.4.1
#TODO RUN chmod 755 /root/.cache/Cypress-arm/9.4.1/Cypress/Cypress

# Show where Node loads required modules from
RUN node -p 'module.paths'

# should print Electron and bundled Node versions
 RUN echo  " node version:    $(node -v) \n" \
   "npm version:     $(npm -v) \n" \
   "OS cpu type:  $(dpkg --print-architecture) \n" \
   "user:            $(whoami) \n"

ENTRYPOINT ["docker-entrypoint.sh"]
